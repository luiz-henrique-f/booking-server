// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model establishment {
  id                   String                 @id @default(uuid())
  name                 String
  phone                String
  address              String
  address_number       String
  neighborhood         String
  city                 String
  uf                   String
  start_day_service    String
  end_day_service      String
  created_at           DateTime               @default(now())
  establishment_photos establishment_photos[]
  users                user[]
}

model user {
  id                 String        @id @default(uuid())
  id_establishment   String
  establishment      establishment @relation(fields: [id_establishment], references: [id])
  name               String
  phone              String
  email              String        @unique
  password           String
  start_time_service String
  end_time_service   String
  created_at         DateTime      @default(now())
  booking            booking[]
}

model client {
  id         String    @id @default(uuid())
  name       String
  phone      String
  created_at DateTime  @default(now())
  booking    booking[]
}

model service {
  id          String    @id @default(uuid())
  description String
  price       String
  duration    String
  booking     booking[]
}

model establishment_photos {
  id               String        @id @default(uuid())
  id_establishment String
  establishment    establishment @relation(fields: [id_establishment], references: [id])
  img_url          String
  created_at       DateTime      @default(now())
}

model booking {
  id          String   @id @default(uuid())
  id_user     String
  user        user     @relation(fields: [id_user], references: [id])
  id_client   String
  client      client   @relation(fields: [id_client], references: [id])
  id_service  String
  service     service  @relation(fields: [id_service], references: [id])
  date        DateTime
  start_time  String
  end_time    String
  observation String?
  created_at  DateTime @default(now())
}
